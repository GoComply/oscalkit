// Code generated by go generate; DO NOT EDIT.
{{$packageName := toLower .Root -}}
package {{ $packageName }}

{{getImports .}}

{{$m := . -}}
{{range .DefineAssembly}}
  // {{ .Description }}
type {{toCamel .Name}} struct {
  {{if .RepresentsRootElement }}
  XMLName xml.Name `xml:"http://csrc.nist.gov/ns/oscal/1.0 {{ .Name }}" json:"-"`
  {{- end}}
  {{- if eq "profile" .Name}}
  ID string `xml:"id,attr,omitempty" json:"id,omitempty"`
  Title string `xml:"title,omitempty" json:"title,omitempty"`
  {{- end}}
{{- range .Flags}}
  // {{ .GoComment }}
  {{- $dt := parseDatatype .Datatype $packageName}}
  {{- if and (eq "id" .Name) (eq "profile" $packageName)}}
  Id string `xml:"param-id,attr,omitempty" json:"id,omitempty"`
  {{- else}}
  {{toCamel .Name}} {{if eq "" $dt}}string{{else}}{{$dt}}{{end}} `xml:"{{ .Name }},attr,omitempty" json:"{{toLowerCamel .Name}},omitempty"`
  {{- end}}
{{- end}}
  {{if .Model}}
    {{ range .Model.Field}}
      // {{ .GoComment }}
      {{- if .Def }}
        {{- $groupAs := .GroupAs }}
        {{- with .Def }}
          {{ toCamel .Name}} {{if $groupAs}}[]{{else}}{{if .RequiresPointer}}*{{end}}{{end}}{{packageImport .Name $m}}{{toCamel .Name}} `xml:"{{ if $groupAs}}{{ $groupAs.Name }}{{else}}{{ .Name }}{{end}},omitempty" json:"{{toLowerCamel .Name}},omitempty"`
        {{- end }}
      {{- else }}
        {{ toCamel .Named}} {{if requiresPointer .Named $m}}*{{end}}{{packageImport .Named $m}}{{toCamel .Named}} `xml:"{{ .Named }},omitempty" json:"{{toLowerCamel .Named}},omitempty"`
      {{- end}}
    {{- end}}

    {{- range .Model.Assembly}}
      // {{ .GoComment }}
      {{- if .Def}}
        {{- $groupAs := .GroupAs }}
        {{- with .Def }}
          {{ toCamel .Name}} {{if $groupAs}}[]{{else}}*{{end}}{{packageImport .Name $m}}{{toCamel .Name}} `xml:"{{ if $groupAs }}{{$groupAs.Name}}{{else}}{{ .Name }}{{end}},omitempty" json:"{{toLowerCamel .Name}},omitempty"`
        {{- end}}
      {{- else }}
        {{toCamel .Named}} *{{packageImport .Named $m}}{{toCamel .Named}} `xml:"{{ .Named }},omitempty" json:"{{toLowerCamel .Named}},omitempty"`
      {{- end}}
    {{- end}}

  {{- range .Model.Choice}}
  {{- range .Field}}
  {{toCamel .Named}} {{if requiresPointer .Named $m}}*{{end}}{{packageImport .Named $m}}{{toCamel .Named}} `xml:"{{ .Named }},omitempty" json:"{{toLowerCamel .Named}},omitempty"`
  {{- end}}

  {{- range .Assembly}}
  {{toCamel .Named}} *{{packageImport .Named $m}}{{toCamel .Named}} `xml:"{{ .Named }},omitempty" json:"{{toLowerCamel .Named}},omitempty"`
  {{- end}}

  {{- end}}

  {{- if .Model.Prose}}
  {{if eq $packageName "catalog"}}
  Prose *Prose `xml:",any" json:"prose,omitempty"`
  {{else}}
  Prose *catalog.Prose `xml:",any" json:"prose,omitempty"`
  {{end}}
  {{- end}}
  {{end}}

}
{{end}}

{{range .DefineField}}
  // {{ .Description }}
{{$l := len .Flags -}}
{{if gt $l 0 -}}
type {{toCamel .Name}} struct {
  {{- range .Flags}}
  // {{ .GoComment }}
  {{- $dt := parseDatatype .Datatype $packageName -}}
  {{toCamel .Name}} {{if eq "" $dt}}string{{else}}{{$dt}}{{end}} `xml:"{{ .Name }},attr,omitempty" json:"{{toLowerCamel .Name}},omitempty"`
  {{end -}}

  Value string `xml:",chardata" json:"value,omitempty"`
}
{{- else}}
type {{toCamel .Name}} string
{{end -}}
{{end}}
