// Code generated by go generate; DO NOT EDIT.
{{$packageName := .GoPackageName -}}
package {{ $packageName }}

{{getImports .}}

{{$m := . -}}
{{range .DefineAssembly}}
  // {{ .GoComment }}
type {{toCamel .Name}} struct {
  {{if .RepresentsRootElement }}
  XMLName xml.Name `xml:"http://csrc.nist.gov/ns/oscal/1.0 {{ .Name }}" json:"-"`
  {{- end}}
{{- range .Flags}}
  // {{ .GoComment }}
  {{- if and (eq "id" .Name) (eq "profile" $packageName)}}
  Id string `xml:"param-id,attr,omitempty" json:"id,omitempty"`
  {{- else}}
  {{toCamel .JsonName}} {{.GoDatatype}} `xml:"{{.XmlName}},attr,omitempty" json:"{{.JsonName}},omitempty"`
  {{- end}}
{{- end}}
  {{if .Model}}
    {{ range .Model.Field}}
      // {{ .GoComment }}
      {{ toCamel .JsonName}} {{.GoMemLayout}}{{.GoName}} `xml:"{{ .XmlName }},omitempty" json:"{{.JsonName}},omitempty"`
    {{- end}}

    {{- range .Model.Assembly}}
      // {{ .GoComment }}
      {{ toCamel .JsonName}} {{.GoMemLayout}}{{.GoName}} `xml:"{{.XmlName}},omitempty" json:"{{.JsonName}},omitempty"`
    {{- end}}

  {{- range .Model.Choice}}
  {{- range .Field}}
  // {{ .GoComment }}
  {{ toCamel .JsonName}} {{.GoMemLayout}}{{.GoName}} `xml:"{{.XmlName}},omitempty" json:"{{.JsonName}},omitempty"`
  {{- end}}

  {{- range .Assembly}}
  // {{ .GoComment }}
  {{ toCamel .JsonName}} {{.GoMemLayout}}{{.GoName}} `xml:"{{.XmlName}},omitempty" json:"{{.JsonName}},omitempty"`
  {{- end}}

  {{- end}}
  {{end}}

}
{{end}}

{{range .DefineField}}
  // {{ .GoComment }}
{{$l := len .Flags -}}
{{- if gt $l 0 -}}
type {{toCamel .Name}} struct {
  {{- range .Flags}}
  // {{ .GoComment }}
  {{toCamel .JsonName}} {{.GoDatatype}} `xml:"{{.XmlName}},attr,omitempty" json:"{{.JsonName}},omitempty"`
  {{end -}}

  Value string `xml:",chardata" json:"value,omitempty"`
}
{{- else}}
  {{- if .IsMarkup }}
  type {{ .GoName }} = Markup
  {{- else }}
  type {{ .GoName }} string
  {{- end}}
{{end -}}
{{end}}

{{ range .Dependencies }}
type {{.GoName}} = {{ .GetMetaschema.GoPackageName }}.{{.GoName}}
{{end }}