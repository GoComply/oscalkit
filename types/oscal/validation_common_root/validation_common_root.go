// Code generated by go generate; DO NOT EDIT.
package validation_common_root

import (
	"github.com/docker/oscalkit/types/oscal/validation_root"
)

// NOT TO BE USED IN A METASCHEMA
type VALIDATIONCommonRoot struct {

	// A reference to a control identifier.
	ControlId string `xml:"control-id,attr,omitempty" json:"controlId,omitempty"`
	// A reference to a component by its identifier
	ComponentId string `xml:"component-id,attr,omitempty" json:"componentId,omitempty"`
	// A category describing the purpose of the component.
	ComponentType string `xml:"component-type,attr,omitempty" json:"componentType,omitempty"`
	// A reference to a capability by its identifier
	CapabilityId string `xml:"capability-id,attr,omitempty" json:"capabilityId,omitempty"`
	// A reference to an OSCAL catalog or profile providing the referenced control or subcontrol definition.
	Source string `xml:"source,attr,omitempty" json:"source,omitempty"`

	// A description supporting the parent item.
	Description *Description `xml:"description,omitempty" json:"description,omitempty"`
	// Additional commentary on the parent item.
	Remarks *Remarks `xml:"remarks,omitempty" json:"remarks,omitempty"`
	// TBD
	IncorporatesComponents []IncorporatesComponent `xml:"incorporates-component,omitempty" json:"incorporates-components,omitempty"`
	// TBD
	IncorporatesCapabilities []IncorporatesCapability `xml:"incorporates-capability,omitempty" json:"incorporates-capabilities,omitempty"`
	// Describes which specific statements are addressed by a requirement, by pointing to a specific requirement statement within a control.
	OnlyStatements []OnlyStatement `xml:"only-statement,omitempty" json:"only-statements,omitempty"`
}

// Describes which specific statements are addressed by a requirement, by pointing to a specific requirement statement within a control.
type OnlyStatement struct {

	// A reference to the specific implemented statement.
	StatementId string `xml:"statement-id,attr,omitempty" json:"statementId,omitempty"`

	// A description supporting the parent item.
	Description *Description `xml:"description,omitempty" json:"description,omitempty"`
	// A value with a name, attributed to the containing control, part, or group.
	Properties []Prop `xml:"prop,omitempty" json:"properties,omitempty"`
	// A reference to a local or remote resource
	Links []Link `xml:"link,omitempty" json:"links,omitempty"`
	// Additional commentary on the parent item.
	Remarks *Remarks `xml:"remarks,omitempty" json:"remarks,omitempty"`
}

// TBD
type IncorporatesComponent struct {

	// A reference to a component by its identifier
	ComponentId string `xml:"component-id,attr,omitempty" json:"componentId,omitempty"`

	// A description supporting the parent item.
	Description *Description `xml:"description,omitempty" json:"description,omitempty"`
}

// TBD
type IncorporatesCapability struct {

	// A reference to a capability by its identifier
	CapabilityId string `xml:"capability-id,attr,omitempty" json:"capabilityId,omitempty"`

	// A description supporting the parent item.
	Description *Description `xml:"description,omitempty" json:"description,omitempty"`
}

type Description = validation_root.Description

type Link = validation_root.Link

type Prop = validation_root.Prop

type Remarks = validation_root.Remarks
