// Code generated by go generate; DO NOT EDIT.
package validation_root

import ()

// NOT TO BE USED IN A METASCHEMA
type VALIDATIONRoot struct {

	// A description supporting the parent item.
	Description Description `xml:"description,omitempty" json:"description,omitempty"`
	// Additional commentary on the parent item.
	Remarks Remarks `xml:"remarks,omitempty" json:"remarks,omitempty"`
	// References a  defined in .
	PartyId PartyId `xml:"party-id,omitempty" json:"partyId,omitempty"`
	// Provides information about the publication and availability of the containing document.
	Metadata *Metadata `xml:"metadata,omitempty" json:"metadata,omitempty"`
	// A collection of citations and resource references.
	BackMatter *BackMatter `xml:"back-matter,omitempty" json:"backMatter,omitempty"`
	// A name/value pair with optional explanatory remarks.
	Annotation *Annotation `xml:"annotation,omitempty" json:"annotation,omitempty"`
	// A reference to a set of organizations or persons that have responsibility for performing a referenced role relative to the parent context.
	ResponsibleParty []ResponsibleParty `xml:"responsible-parties,omitempty" json:"responsibleParty,omitempty"`
}

// Provides information about the publication and availability of the containing document.
type Metadata struct {

	// A title for display and navigation
	Title Title `xml:"title,omitempty" json:"title,omitempty"`
	// The date and time this document was published.
	Published Published `xml:"published,omitempty" json:"published,omitempty"`
	// Date and time of last modification.
	LastModified LastModified `xml:"last-modified,omitempty" json:"lastModified,omitempty"`
	// The version of the document content.
	Version Version `xml:"version,omitempty" json:"version,omitempty"`
	// OSCAL model version.
	OscalVersion OscalVersion `xml:"oscal-version,omitempty" json:"oscalVersion,omitempty"`
	// A document identifier qualified by an identifier .
	DocId []DocId `xml:"document-ids,omitempty" json:"docId,omitempty"`
	// A value with a name, attributed to the containing control, part, or group.
	Prop []Prop `xml:"properties,omitempty" json:"prop,omitempty"`
	// A reference to a local or remote resource
	Link []Link `xml:"links,omitempty" json:"link,omitempty"`
	// Additional commentary on the parent item.
	Remarks Remarks `xml:"remarks,omitempty" json:"remarks,omitempty"`
	// Defining a role to be assigned to a party
	Role []Role `xml:"roles,omitempty" json:"role,omitempty"`
	// A responsible entity, either singular (an organization or person) or collective (multiple persons)
	Party []Party `xml:"parties,omitempty" json:"party,omitempty"`
	// A reference to a set of organizations or persons that have responsibility for performing a referenced role relative to the parent context.
	ResponsibleParty []ResponsibleParty `xml:"responsible-parties,omitempty" json:"responsibleParty,omitempty"`
}

// A collection of citations and resource references.
type BackMatter struct {

	// A citation to resources, either external or internal (by means of internal cross-reference).
	Citation []Citation `xml:"citations,omitempty" json:"citation,omitempty"`
	// A resource associated with the present document.
	Resource []Resource `xml:"resources,omitempty" json:"resource,omitempty"`
}

// A name/value pair with optional explanatory remarks.
type Annotation struct {

	// Identifying the purpose and intended use of the property, part or other object.
	Name string `xml:",attr,omitempty" json:",omitempty"`
	// Unique identifier of the containing object
	Id string `xml:",attr,omitempty" json:",omitempty"`
	// A namespace qualifying the name.
	Ns string `xml:",attr,omitempty" json:",omitempty"`
	// Indicates the value of the characteristic.
	Value string `xml:"value,attr,omitempty" json:"value,omitempty"`

	// Additional commentary on the parent item.
	Remarks Remarks `xml:"remarks,omitempty" json:"remarks,omitempty"`
}

// A responsible entity, either singular (an organization or person) or collective (multiple persons)
type Party struct {

	// Unique identifier of the containing object
	Id string `xml:",attr,omitempty" json:",omitempty"`

	// A value with a name, attributed to the containing control, part, or group.
	Prop []Prop `xml:"properties,omitempty" json:"prop,omitempty"`
	// A reference to a local or remote resource
	Link []Link `xml:"links,omitempty" json:"link,omitempty"`
	// Additional commentary on the parent item.
	Remarks Remarks `xml:"remarks,omitempty" json:"remarks,omitempty"`
	// A person, with contact information
	Person []Person `xml:"persons,omitempty" json:"person,omitempty"`
	// An organization or legal entity (not a person), with contact information
	Org *Org `xml:"org,omitempty" json:"org,omitempty"`
	// A name/value pair with optional explanatory remarks.
	Annotation []Annotation `xml:"annotations,omitempty" json:"annotation,omitempty"`
}

// A person, with contact information
type Person struct {

	// Full (legal) name of an individual
	PersonName PersonName `xml:"person-name,omitempty" json:"personName,omitempty"`
	// A common name, short name or acronym
	ShortName ShortName `xml:"short-name,omitempty" json:"shortName,omitempty"`
	// Affiliated organization
	OrgName OrgName `xml:"org-name,omitempty" json:"orgName,omitempty"`
	// An identifier for a person (such as an ORCID) using a designated scheme.
	PersonId []PersonId `xml:"person-ids,omitempty" json:"personId,omitempty"`
	// An identifier for an organization using a designated scheme.
	OrgId []OrgId `xml:"organization-ids,omitempty" json:"orgId,omitempty"`
	// Email address
	Email []Email `xml:"email-addresses,omitempty" json:"email,omitempty"`
	// Contact number by telephone
	Phone []Phone `xml:"telephone-numbers,omitempty" json:"phone,omitempty"`
	// URL for web site or Internet presence
	Url []Url `xml:"URLs,omitempty" json:"url,omitempty"`
	// A value with a name, attributed to the containing control, part, or group.
	Prop []Prop `xml:"properties,omitempty" json:"prop,omitempty"`
	// A reference to a local or remote resource
	Link []Link `xml:"links,omitempty" json:"link,omitempty"`
	// Additional commentary on the parent item.
	Remarks Remarks `xml:"remarks,omitempty" json:"remarks,omitempty"`
	// A postal address.
	Address []Address `xml:"addresses,omitempty" json:"address,omitempty"`
	// A name/value pair with optional explanatory remarks.
	Annotation []Annotation `xml:"annotations,omitempty" json:"annotation,omitempty"`
}

// An organization or legal entity (not a person), with contact information
type Org struct {

	// Full (legal) name of an organization
	OrgName OrgName `xml:"org-name,omitempty" json:"orgName,omitempty"`
	// A common name, short name or acronym
	ShortName ShortName `xml:"short-name,omitempty" json:"shortName,omitempty"`
	// An identifier for an organization using a designated scheme.
	OrgId []OrgId `xml:"organization-ids,omitempty" json:"orgId,omitempty"`
	// Email address
	Email []Email `xml:"email-addresses,omitempty" json:"email,omitempty"`
	// Contact number by telephone
	Phone []Phone `xml:"telephone-numbers,omitempty" json:"phone,omitempty"`
	// URL for web site or Internet presence
	Url []Url `xml:"URLs,omitempty" json:"url,omitempty"`
	// A value with a name, attributed to the containing control, part, or group.
	Prop []Prop `xml:"properties,omitempty" json:"prop,omitempty"`
	// A reference to a local or remote resource
	Link []Link `xml:"links,omitempty" json:"link,omitempty"`
	// Additional commentary on the parent item.
	Remarks Remarks `xml:"remarks,omitempty" json:"remarks,omitempty"`
	// A postal address.
	Address []Address `xml:"addresses,omitempty" json:"address,omitempty"`
	// A name/value pair with optional explanatory remarks.
	Annotation []Annotation `xml:"annotations,omitempty" json:"annotation,omitempty"`
}

// A pointer to an external copy of a document with optional hash for verification
type Rlink struct {

	// A link to a document or document fragment (actual, nominal or projected)
	Href string `xml:",attr,omitempty" json:",omitempty"`
	// Describes the media type of the linked resource
	MediaType string `xml:",attr,omitempty" json:",omitempty"`

	// A representation of a cryptographic digest generated over a resource using a hash algorithm.
	Hash []Hash `xml:"hashes,omitempty" json:"hash,omitempty"`
}

// A postal address.
type Address struct {

	// Indicates the type of address.
	Type string `xml:",attr,omitempty" json:",omitempty"`

	// A single line of an address.
	AddrLine []AddrLine `xml:"postal-address,omitempty" json:"addrLine,omitempty"`
	// City, town or geographical region for mailing address
	City City `xml:"city,omitempty" json:"city,omitempty"`
	// State, province or analogous geographical region for mailing address
	State State `xml:"state,omitempty" json:"state,omitempty"`
	// Postal or ZIP code for mailing address
	PostalCode PostalCode `xml:"postal-code,omitempty" json:"postalCode,omitempty"`
	// Country for mailing address
	Country Country `xml:"country,omitempty" json:"country,omitempty"`
}

// A resource associated with the present document.
type Resource struct {

	// Unique identifier of the containing object
	Id string `xml:",attr,omitempty" json:",omitempty"`

	// A short textual description
	Desc Desc `xml:"desc,omitempty" json:"desc,omitempty"`
	// A value with a name, attributed to the containing control, part, or group.
	Prop []Prop `xml:"properties,omitempty" json:"prop,omitempty"`
	//
	Base64 *Base64 `xml:"base64,omitempty" json:"base64,omitempty"`
	// Additional commentary on the parent item.
	Remarks Remarks `xml:"remarks,omitempty" json:"remarks,omitempty"`
	// A pointer to an external copy of a document with optional hash for verification
	Rlink []Rlink `xml:"rlinks,omitempty" json:"rlink,omitempty"`
}

// Defining a role to be assigned to a party
type Role struct {

	// Unique identifier of the containing object
	Id string `xml:",attr,omitempty" json:",omitempty"`

	// A title for display and navigation
	Title Title `xml:"title,omitempty" json:"title,omitempty"`
	// A common name, short name or acronym
	ShortName ShortName `xml:"short-name,omitempty" json:"shortName,omitempty"`
	// A short textual description
	Desc Desc `xml:"desc,omitempty" json:"desc,omitempty"`
	// A value with a name, attributed to the containing control, part, or group.
	Prop []Prop `xml:"properties,omitempty" json:"prop,omitempty"`
	// A reference to a local or remote resource
	Link []Link `xml:"links,omitempty" json:"link,omitempty"`
	// Additional commentary on the parent item.
	Remarks Remarks `xml:"remarks,omitempty" json:"remarks,omitempty"`
	// A name/value pair with optional explanatory remarks.
	Annotation []Annotation `xml:"annotations,omitempty" json:"annotation,omitempty"`
}

// A reference to a set of organizations or persons that have responsibility for performing a referenced role relative to the parent context.
type ResponsibleParty struct {

	// The role that the party is responsible for.
	RoleId string `xml:"role-id,attr,omitempty" json:"roleId,omitempty"`

	// References a  defined in .
	PartyId []PartyId `xml:"party-ids,omitempty" json:"partyId,omitempty"`
	// A value with a name, attributed to the containing control, part, or group.
	Prop []Prop `xml:"properties,omitempty" json:"prop,omitempty"`
	// A reference to a local or remote resource
	Link []Link `xml:"links,omitempty" json:"link,omitempty"`
	// Additional commentary on the parent item.
	Remarks Remarks `xml:"remarks,omitempty" json:"remarks,omitempty"`
	// A name/value pair with optional explanatory remarks.
	Annotation []Annotation `xml:"annotations,omitempty" json:"annotation,omitempty"`
}

// A citation to resources, either external or internal (by means of internal cross-reference).
type Citation struct {

	// Unique identifier of the containing object
	Id string `xml:",attr,omitempty" json:",omitempty"`

	// An address for retrieval of a citation
	Target []Target `xml:"targets,omitempty" json:"target,omitempty"`
	// A title for display and navigation
	Title Title `xml:"title,omitempty" json:"title,omitempty"`
	// A short textual description
	Desc Desc `xml:"desc,omitempty" json:"desc,omitempty"`
	// A document identifier qualified by an identifier .
	DocId []DocId `xml:"document-ids,omitempty" json:"docId,omitempty"`
	// A value with a name, attributed to the containing control, part, or group.
	Prop []Prop `xml:"properties,omitempty" json:"prop,omitempty"`
}

// A reference to a local or remote resource
type Link struct {
	// A link to a document or document fragment (actual, nominal or projected)
	Href string `xml:",attr,omitempty" json:",omitempty"`

	// Describes the type of relationship provided by the link. This can be an indicator of the link's purpose.
	Rel string `xml:",attr,omitempty" json:",omitempty"`

	// Describes the media type of the linked resource
	MediaType string `xml:",attr,omitempty" json:",omitempty"`
	Value     string `xml:",chardata" json:"value,omitempty"`
}

// The date and time this document was published.

type Published string

// Date and time of last modification.

type LastModified string

// The version of the document content.

type Version string

// OSCAL model version.

type OscalVersion string

// A document identifier qualified by an identifier .
type DocId struct {
	// Qualifies the kind of document identifier.
	Type  string `xml:",attr,omitempty" json:",omitempty"`
	Value string `xml:",chardata" json:"value,omitempty"`
}

// A value with a name, attributed to the containing control, part, or group.
type Prop struct {
	// Identifying the purpose and intended use of the property, part or other object.
	Name string `xml:",attr,omitempty" json:",omitempty"`

	// Unique identifier of the containing object
	Id string `xml:",attr,omitempty" json:",omitempty"`

	// A namespace qualifying the name.
	Ns string `xml:",attr,omitempty" json:",omitempty"`

	// Indicating the type or classification of the containing object
	Class string `xml:",attr,omitempty" json:",omitempty"`
	Value string `xml:",chardata" json:"value,omitempty"`
}

// References a  defined in .

type PartyId string

// An identifier for a person (such as an ORCID) using a designated scheme.
type PersonId struct {
	// Indicating the type of identifier, address, email or other data item.
	Type  string `xml:",attr,omitempty" json:",omitempty"`
	Value string `xml:",chardata" json:"value,omitempty"`
}

// An identifier for an organization using a designated scheme.
type OrgId struct {
	// Indicating the type of identifier, address, email or other data item.
	Type  string `xml:",attr,omitempty" json:",omitempty"`
	Value string `xml:",chardata" json:"value,omitempty"`
}

// Full (legal) name of an individual

type PersonName string

// Full (legal) name of an organization

type OrgName string

// A common name, short name or acronym

type ShortName string

// A single line of an address.

type AddrLine string

// City, town or geographical region for mailing address

type City string

// State, province or analogous geographical region for mailing address

type State string

// Postal or ZIP code for mailing address

type PostalCode string

// Country for mailing address

type Country string

// Email address

type Email string

// Contact number by telephone
type Phone struct {
	// Indicates the type of phone number.
	Type  string `xml:",attr,omitempty" json:",omitempty"`
	Value string `xml:",chardata" json:"value,omitempty"`
}

// URL for web site or Internet presence

type Url string

// A short textual description

type Desc string

// A representation of a cryptographic digest generated over a resource using a hash algorithm.
type Hash struct {
	// Method by which a hash is derived
	Algorithm string `xml:",attr,omitempty" json:",omitempty"`
	Value     string `xml:",chardata" json:"value,omitempty"`
}

// A title for display and navigation

type Title string

//
type Base64 struct {
	// Name of the file before it was encoded as Base64 to be embedded in a . This is the name that will be assigned to the file when the file is decoded.
	Filename string `xml:",attr,omitempty" json:",omitempty"`

	// Describes the media type of the linked resource
	MediaType string `xml:",attr,omitempty" json:",omitempty"`
	Value     string `xml:",chardata" json:"value,omitempty"`
}

// An address for retrieval of a citation

type Target string

// A description supporting the parent item.

type Description string

// Additional commentary on the parent item.

type Remarks string
